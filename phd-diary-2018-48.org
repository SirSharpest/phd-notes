#+TITLE: PhD Diary
#+AUTHOR: Nathan Hughes
#+OPTIONS: toc:nil H:4 ^:nil
#+LaTeX_CLASS: article
#+LaTeX_CLASS_OPTIONS: [a4paper]
#+LaTeX_HEADER: \usepackage[margin=0.8in]{geometry}
#+LaTeX_HEADER: \usepackage{amssymb,amsmath}
#+LaTeX_HEADER: \usepackage{fancyhdr}
#+LaTeX_HEADER: \pagestyle{fancy}
#+LaTeX_HEADER: \usepackage{lastpage}
#+LaTeX_HEADER: \usepackage{float}
#+LaTeX_HEADER: \restylefloat{figure}
#+LaTeX_HEADER: \usepackage{hyperref}
#+LaTeX_HEADER: \hypersetup{urlcolor=blue}
#+LaTex_HEADER: \usepackage{titlesec}
#+LaTex_HEADER: \setcounter{secnumdepth}{4}
#+LaTeX_HEADER: \usepackage{minted}
#+LaTeX_HEADER: \setminted{frame=single,framesep=10pt}
#+LaTeX_HEADER: \chead{}
#+LaTeX_HEADER: \rhead{\today}
#+LaTeX_HEADER: \cfoot{}
#+LaTeX_HEADER: \rfoot{\thepage\ of \pageref{LastPage}}
#+LaTeX_HEADER: \usepackage[parfill]{parskip}
#+LaTeX_HEADER:\usepackage{subfig}
#+LaTex_HEADER: \usepackage[round]{natbib}
#+LaTeX_HEADER: \hypersetup{colorlinks=true,linkcolor=black, citecolor=black}
#+LaTeX_HEADER: \usepackage{gensymb}
#+LATEX_HEADER_EXTRA:  \usepackage{framed}
#+LATEX: \maketitle
#+LATEX: \clearpage
#+LATEX: \tableofcontents
#+LATEX: \clearpage




* Diffusion of Chitin

- [[https://www.researchgate.net/post/Is_there_a_simple_way_to_estimate_the_diffusion_coefficient_of_a_molecule_in_water_from_its_molecular_weight_I_dont_know_its_viscosity][Useful link]]
- [[https://www.researchgate.net/publication/236084986_Chitin_Chitosan_and_Glycated_Chitosan_Regulate_Immune_Responses_The_Novel_Adjuvants_for_Cancer_Vaccine/figures?lo=1][Chitin Structure Possibly]]

** Simple Structure
http://www.chemspider.com/Chemical-Structure.22563.html?rid=cdc5ab75-0c3b-4c17-890e-ceebf59b0942&page_num=0

#+CAPTION: N-Acetyl-b-D-glucosamine
#+ATTR_LATEX: :width 10cm
#+NAME: fig:N-Acetyl-b-D-glucosamine
[[./images/chemstruct.png]]


** TODO Reapply this with more accurate structure

A decent structure can be found in citep:liChitinChitosanGlycated2013

#+CAPTION: Chitin Molecule
#+ATTR_LATEX: :width 10cm
#+NAME: fig:Chitin Molecule
[[./images/Chitin.png]]


\clearpage
** Stokes-Einstein Equation
For diffusion of spherical particles through a liquid with low Reynolds number

\begin{equation}
D = \frac{kT}{6 \pi \mu r}
\end{equation}

Where:
- $D$ is the diffusion constant
- $\mu$ is the /mobility/, or the ratio of the particles terminal drift velocity
- $k$ is [[https://www.wikiwand.com/en/Boltzmann%2527s_constant][Boltzmann's constant]]
- $T$ is the absolute temperature
- $r$ is the radius of the spherical particle
Values for these could be:

- $\mu$ = $8.90 \times 10^{-4} Pa$ at 25\degree C
  -  [[https://www.engineersedge.com/physics/water__density_viscosity_specific_weight_13146.htm][Water Viscosity Table]]
- $k$ = $1.38 \times 10^{-23}$
- $T$ =  25\degree C = 298.15 K
- $r$ = 5.4nm

Thus

\begin{align}
D &= \frac{1.38e^{-23} \times 298.15 }{6 \pi \times 8.9e^{-4} \times 5.4e^{-10}} \\
D &\approx 5.511410501227208e^{-10}  m^2/s
\end{align}

#+BEGIN_SRC ipython :session :exports code :results none :eval never-export
from math import pi
D = (1.38e-23 * 298.15)/(6*pi * 8.9e-4 * 5.4e-10)
#+END_SRC

\clearpage
** Applying Stokes-Einstein Equation to diffusion model

*** Estimating for 2D area

#+BEGIN_SRC ipython :exports code :session :results none :eval never-export
  import numpy as np
  from numpy import pi

  def diffuse_2D(nx, ny, dx, dy, nt, D, dt, prevState=None, prevIter=None):
      dx2 = dx**2
      dy2 = dy**2
      u = np.zeros((nx, ny))
      mid_x = int(nx/2)
      mid_y = int(ny/2)

      u = prevState.copy()
      start = prevIter

      for n in range(start, nt):
          un = u.copy()  # Update previous values
          u[1:-1, 1:-1] = un[1:-1, 1:-1] + D * \
              (((un[2:, 1:-1] - 2 * un[1:-1, 1:-1] + un[:-2, 1:-1])/dx2) +
               ((un[1:-1, 2:] - 2 * un[1:-1, 1:-1] + un[1:-1, :-2])/dy2))
      return un

  # Number of x,y positions
  ny = 160
  nx = 270

  # Change in X & Y
  dx, dy = 1, 1
  # Number of timesteps to calculate until
  nt = 6
  # Max time state to reach
  max_t = 60*60*24 # 2*24 hr
  # Diffusion constant in mm2/s
  diff = lambda x: ((1.38e-23 * 298.15)/(6*pi * 8.9e-4 * x))
  D = diff(5.4e-10)

  # for visualisation we resize the mm to
  # pixel ratio and apply it to the diffusion constant
  # 42 px to mm
  D = (D*1e+6)

  dt = 1  # change in time = 1 second

  nts = [str(nt) for nt in np.linspace(1, max_t, nt, dtype=int)]

  # Calc initial state
  prevState = np.zeros((nx, ny))
  # 1 mm2 zone
  prevState[60:60+21, 70:70+21] = 1
  states = [prevState]

  for idx, n in enumerate(nts):
      if idx is 0:
          continue
      prevIter = int(nts[idx-1])
      prevState[60:60+21, 70:70+21] = 1
      prevState = diffuse_2D(nx, ny, dx, dy, int(n), D, dt, prevState=prevState, prevIter=prevIter)
      states.append(prevState)
#+END_SRC


#+BEGIN_SRC ipython :exports none :session  :ipyfile ./images/stokes2diffusion.png :results none :eval never-export
  import matplotlib.colors as colors
  import matplotlib.pyplot as plt
  import matplotlib
  from copy import deepcopy
  %matplotlib inline
  num_colors = 25
  backup = deepcopy(states)
  for idx, _ in enumerate(states):
       states[idx][states[idx] < (1e-12)/1.48] = 0

  bounds = np.geomspace(states[-1][states[-1]>0].min(),1, num=num_colors)
  norm = colors.BoundaryNorm(boundaries=bounds, ncolors=256)
  fig, axes = plt.subplots(2, 3, sharex=True, sharey=True, dpi=300)
  leaf = plt.imread('./images/arabidopsis_tmp.png')

  for idx, d in enumerate(nts):

      masked_data = states[idx].copy()
      #masked_data[masked_data > 1e-200] = 1
      axes[idx//3, idx % 3].imshow(leaf)
      frame = axes[idx//3, idx % 3].pcolormesh(masked_data, cmap='RdBu_r',  norm=norm, alpha=1,  linewidth=0)
      axes[idx//3, idx % 3].set_axis_off()
      axes[idx//3, idx % 3].set_title('Hours: {0:.2f}'.format((int(d)/60)/60))

  fig.colorbar(frame, ax=axes,format='%.0e')
  states = deepcopy(backup)
#+END_SRC

** Diffusion of Chitin in 60 seconds (minimum threshold of > 1)
Essentially, if there was no cell barriers how far could *at least some* chitin diffuse in a minute?
#+CAPTION: Applying Einstein-Stokes to Diffusion Models, a 0.5mm^2 zone is introduced at TS:1.
#+ATTR_LATEX: :width 12cm
[[./images/stokes2diffusion.png]]

** Question
The question now becomes: "What quantity of Chitin molecules is required to be of interest?"



* Musings


** On Cell Walls
Does it make sense to consider each cell as a container that fills a certain amount before "spilling-over"

* Verification of equations

#+CAPTION: fxSolver applied to same values produces similar value for $D$
#+ATTR_LATEX: :width 10cm
#+NAME: fig:fxSolver
[[./images/fxsolver.png]]


\clearpage
bibliography:library.bib
bibliographystyle:plainnat
